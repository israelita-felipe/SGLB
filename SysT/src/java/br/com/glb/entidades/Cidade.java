package br.com.glb.entidades;
// Generated 11/04/2014 23:32:24 by Hibernate Tools 3.6.0

import java.util.HashSet;
import java.util.Objects;
import java.util.Set;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import javax.persistence.GenerationType;
import javax.persistence.Id;
import javax.persistence.OneToMany;
import javax.persistence.Table;

/**
 * Cidade generated by hbm2java
 */
@Entity
@Table(name = "cidade", schema = "public"
)
public class Cidade implements java.io.Serializable {

    private static final long serialVersionUID = 1L;   
    
    @Id
    @Column(name = "id", unique = true)
    @GeneratedValue(strategy = GenerationType.IDENTITY)
    private Integer id;
    @Column(name = "estado", nullable = false)
    private String estado;
    @Column(name = "pais", nullable = false)
    private String pais;
    @Column(name = "regiao", nullable = false)
    private String regiao;
    @Column(name = "nome", nullable = false)
    private String nome;
    @Column(name = "usuario")
    private Integer usuario;
    @OneToMany(fetch = FetchType.LAZY, mappedBy = "cidade")
    private Set agencias = new HashSet(0);

    private Cidade() {
    }

    public static Cidade getNewCidade() {
        return new Cidade();
    }

    private Cidade(Integer id, String estado, String pais, String regiao, String nome) {
        this.id = id;
        this.estado = estado;
        this.pais = pais;
        this.regiao = regiao;
        this.nome = nome;
    }

    public static Cidade getNewCidade(Integer id, String estado, String pais, String regiao, String nome) {
        return new Cidade(id, estado, pais, regiao, nome);
    }

    private Cidade(Integer id, String estado, String pais, String regiao, String nome, Integer usuario, Set agencias) {
        this.id = id;
        this.estado = estado;
        this.pais = pais;
        this.regiao = regiao;
        this.nome = nome;
        this.usuario = usuario;
        this.agencias = agencias;
    }

    public static Cidade getNewCidade(Integer id, String estado, String pais, String regiao, String nome, Integer usuario, Set agencias) {
        return new Cidade(id, estado, pais, regiao, nome, usuario, agencias);
    }

    public Integer getId() {
        return this.id;
    }

    public void setId(Integer id) {
        this.id = id;
    }

    public String getEstado() {
        return this.estado;
    }

    public void setEstado(String estado) {
        this.estado = estado;
    }

    public String getPais() {
        return this.pais;
    }

    public void setPais(String pais) {
        this.pais = pais;
    }

    public String getRegiao() {
        return this.regiao;
    }

    public void setRegiao(String regiao) {
        this.regiao = regiao;
    }

    public String getNome() {
        return this.nome;
    }

    public void setNome(String nome) {
        this.nome = nome;
    }

    public Integer getUsuario() {
        return this.usuario;
    }

    public void setUsuario(Integer usuario) {
        this.usuario = usuario;
    }

    public Set getAgencias() {
        return this.agencias;
    }

    public void setAgencias(Set agencias) {
        this.agencias = agencias;
    }

    @Override
    public int hashCode() {
        int hash = 7;
        hash = 79 * hash + this.id;
        hash = 79 * hash + Objects.hashCode(this.estado);
        hash = 79 * hash + Objects.hashCode(this.pais);
        hash = 79 * hash + Objects.hashCode(this.regiao);
        hash = 79 * hash + Objects.hashCode(this.nome);
        hash = 79 * hash + Objects.hashCode(this.usuario);
        hash = 79 * hash + Objects.hashCode(this.agencias);
        return hash;
    }

    @Override
    public boolean equals(Object obj) {
        if (obj == null) {
            return false;
        }
        if (getClass() != obj.getClass()) {
            return false;
        }
        final Cidade other = (Cidade) obj;
        if (this.id != other.id) {
            return false;
        }
        if (!Objects.equals(this.estado, other.estado)) {
            return false;
        }
        if (!Objects.equals(this.pais, other.pais)) {
            return false;
        }
        if (!Objects.equals(this.regiao, other.regiao)) {
            return false;
        }
        if (!Objects.equals(this.nome, other.nome)) {
            return false;
        }
        if (!Objects.equals(this.usuario, other.usuario)) {
            return false;
        }
        if (!Objects.equals(this.agencias, other.agencias)) {
            return false;
        }
        return true;
    }

}
